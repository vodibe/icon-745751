{'mean_fit_time': array([1.0601439 , 2.13246984, 0.78471522, 1.61640034, 0.67518229,
        1.44450669, 0.831285  , 1.76930709, 0.74094138, 1.5416471 ,
        0.63160944, 1.3847436 , 0.55905457, 1.23223839, 0.54726171,
        1.21684761, 0.47630515, 1.09952054, 1.51886163, 3.04471731,
        1.07813334, 2.53882914, 0.84647908, 2.07991362, 1.04855175,
        2.56741261, 0.93762054, 2.33155832, 0.72415247, 1.94439931,
        0.60342774, 1.4620944 , 0.58044162, 1.45530005, 0.5252749 ,
        1.27661066, 1.06893821, 2.09090719, 0.81969266, 1.64198503,
        0.7469378 , 1.52185931, 0.86126733, 1.74632301, 0.77112317,
        1.62839332, 0.71555896, 1.4718883 , 0.63840446, 1.32957807,
        0.61981554, 1.31658597, 0.55405579, 1.20265675, 1.54463339,
        3.0780972 , 1.26221805, 2.83984442, 1.04215546, 2.32875996,
        1.28840332, 2.96516633, 1.16268106, 2.70112982, 1.00697789,
        2.25040827, 0.73574333, 1.71533937, 0.70836124, 1.64698172,
        0.63001003, 1.4315146 , 1.02636571, 1.99056907, 0.82169185,
        1.66397028, 0.74433875, 1.49967341, 0.88465252, 1.78329682,
        0.81729484, 1.69255366, 0.74154239, 1.54724317, 0.66338959,
        1.37175169, 0.64340134, 1.33797235, 0.60142775, 1.19606066,
        0.7801178 , 0.80010443, 1.32378111, 2.67094798, 1.12170715,
        2.20923333, 1.58102279, 3.38091025, 1.24603004, 2.59399581,
        1.03796077, 2.14187536, 0.84087996, 1.77869992, 0.82749057,
        1.71473947, 0.68297768, 1.38914146]),
 'std_fit_time': array([0.00487099, 0.02151469, 0.01574293, 0.01138679, 0.00716802,
        0.01152692, 0.02810624, 0.05978855, 0.00705423, 0.02068162,
        0.00893858, 0.02062365, 0.00458401, 0.00497619, 0.00449594,
        0.0091288 , 0.01092192, 0.01035558, 0.06249945, 0.13709588,
        0.00856048, 0.04596061, 0.02786259, 0.0294263 , 0.02248336,
        0.04736952, 0.02426151, 0.05129486, 0.03632463, 0.02539828,
        0.01348864, 0.02495501, 0.00255914, 0.02273135, 0.03556828,
        0.02211775, 0.00775698, 0.02786371, 0.01378178, 0.02109565,
        0.01203605, 0.01366476, 0.00969817, 0.0284002 , 0.00982499,
        0.01656267, 0.01583879, 0.01573195, 0.00827586, 0.01455946,
        0.00503258, 0.02097825, 0.00360862, 0.01092209, 0.06950727,
        0.12511154, 0.01246499, 0.12538911, 0.03077928, 0.03123768,
        0.02090983, 0.077295  , 0.02407367, 0.13975021, 0.04698006,
        0.09441791, 0.00684582, 0.01623315, 0.012016  , 0.02951169,
        0.00972181, 0.01950871, 0.01197641, 0.02859312, 0.00851312,
        0.02466733, 0.00994176, 0.01582072, 0.00713437, 0.00272664,
        0.02207991, 0.07496498, 0.02722123, 0.04991974, 0.01392553,
        0.02027173, 0.0068768 , 0.02697497, 0.01115345, 0.02583188,
        0.02415606, 0.02397322, 0.0120685 , 0.04355054, 0.01904239,
        0.08452842, 0.02450493, 0.14963357, 0.02862727, 0.03820965,
        0.01749079, 0.03321577, 0.0178055 , 0.04631908, 0.01959564,
        0.04209571, 0.01629497, 0.05681521]),
 'mean_score_time': array([0.00299811, 0.00440917, 0.00259838, 0.00319824, 0.00259871,
        0.00299845, 0.00279903, 0.00299773, 0.0027987 , 0.00339799,
        0.00279865, 0.00279875, 0.00259819, 0.00319791, 0.0023984 ,
        0.00299821, 0.00280218, 0.00299821, 0.00339751, 0.005199  ,
        0.00319862, 0.00339866, 0.00259619, 0.00339818, 0.00299807,
        0.00439672, 0.00279808, 0.00419784, 0.00259757, 0.00299749,
        0.00279756, 0.00299788, 0.00239859, 0.0033977 , 0.0027988 ,
        0.00299859, 0.00299854, 0.00359783, 0.00279908, 0.00339851,
        0.00219879, 0.00259848, 0.00259924, 0.00339484, 0.00259905,
        0.00299773, 0.00279684, 0.00299911, 0.00299921, 0.00299797,
        0.00299959, 0.00319848, 0.00240002, 0.00299845, 0.00379748,
        0.00579672, 0.0027987 , 0.00399742, 0.0029985 , 0.00339818,
        0.00299802, 0.00379801, 0.00279856, 0.00359764, 0.00279827,
        0.0033998 , 0.00239882, 0.00319905, 0.00259886, 0.00339799,
        0.00259905, 0.00299873, 0.00279818, 0.0033978 , 0.00239859,
        0.00299907, 0.00239906, 0.00299788, 0.002599  , 0.0037981 ,
        0.00259833, 0.00339837, 0.00279756, 0.00299811, 0.00319905,
        0.00259929, 0.00279889, 0.00299845, 0.00259867, 0.00279846,
        0.0027986 , 0.00299873, 0.00279918, 0.00359769, 0.00259781,
        0.00359802, 0.00339861, 0.00439696, 0.00259838, 0.00379777,
        0.0025959 , 0.00319848, 0.00279865, 0.00339875, 0.00239701,
        0.00359797, 0.00259833, 0.00299797]),
 'std_score_time': array([5.64201334e-07, 5.04931794e-04, 4.89667827e-04, 3.99780472e-04,
        4.89745872e-04, 4.90933902e-07, 3.99709043e-04, 5.56082906e-07,
        3.99544658e-04, 4.90233344e-04, 3.99876977e-04, 3.99924021e-04,
        4.89414718e-04, 4.00066461e-04, 4.89473113e-04, 2.43140197e-07,
        3.94012751e-04, 3.87384339e-07, 4.90038785e-04, 3.98624639e-04,
        3.99351191e-04, 4.90466111e-04, 4.92072091e-04, 4.89687478e-04,
        9.93378957e-07, 4.89648691e-04, 3.99828597e-04, 3.99352273e-04,
        4.90174961e-04, 4.28782409e-06, 3.99447925e-04, 1.06624030e-06,
        4.89414951e-04, 4.89299939e-04, 3.99828085e-04, 7.07263802e-07,
        1.10189629e-06, 4.89473113e-04, 3.99852919e-04, 4.89707086e-04,
        4.00495543e-04, 4.89648506e-04, 4.89786485e-04, 4.91954146e-04,
        4.89823515e-04, 1.39510525e-06, 7.48262896e-04, 1.12234137e-06,
        9.95665217e-07, 8.20381667e-07, 1.23794126e-06, 3.99662810e-04,
        4.89416832e-04, 1.60007112e-06, 3.99685105e-04, 7.48022391e-04,
        4.00019559e-04, 9.12243198e-07, 6.32786779e-04, 4.89784976e-04,
        4.90933902e-07, 4.00186022e-04, 4.00066802e-04, 4.89903587e-04,
        3.99923481e-04, 4.87989692e-04, 4.89901452e-04, 4.01401945e-04,
        4.89473229e-04, 4.89940525e-04, 4.89823724e-04, 3.56832255e-07,
        3.99518536e-04, 4.90779062e-04, 4.89123408e-04, 7.97901179e-07,
        4.90388352e-04, 1.49273642e-06, 4.89979636e-04, 7.47907745e-04,
        4.90116451e-04, 4.89726350e-04, 7.47551612e-04, 6.33691521e-04,
        9.79238753e-04, 4.90117611e-04, 3.99042326e-04, 4.90933902e-07,
        4.89706761e-04, 4.00257281e-04, 3.99972231e-04, 6.67572021e-07,
        3.98828651e-04, 4.90135216e-04, 4.89592073e-04, 4.90602790e-04,
        4.89046114e-04, 4.89065385e-04, 7.99942031e-04, 3.99232235e-04,
        4.87660408e-04, 4.00018706e-04, 4.00234586e-04, 4.88637505e-04,
        4.87203624e-04, 4.89105078e-04, 4.90700106e-04, 8.99694551e-07]),
 'param_criterion': masked_array(data=['friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse',
                    'friedman_mse', 'friedman_mse', 'friedman_mse'],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_learning_rate': masked_array(data=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
                    0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
                    0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
                    0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
                    0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
                    0.1, 0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                    0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                    0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                    0.5, 0.5, 0.5, 0.5, 0.5, 0.5],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_max_depth': masked_array(data=[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
                    22, 22, 22, 22, 22, 22, 22, 22, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 22,
                    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
                    22, 22, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 22, 22, 22, 22, 22, 22, 22, 22,
                    22, 22, 22, 22, 22, 22, 22, 22, 22, 22],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_min_samples_leaf': masked_array(data=[1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 20, 20, 20, 20, 20,
                    20, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 20, 20, 20, 20,
                    20, 20, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 20, 20, 20,
                    20, 20, 20, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 20, 20,
                    20, 20, 20, 20, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 20,
                    20, 20, 20, 20, 20, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5,
                    20, 20, 20, 20, 20, 20],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_min_samples_split': masked_array(data=[2, 2, 50, 50, 120, 120, 2, 2, 50, 50, 120, 120, 2, 2,
                    50, 50, 120, 120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50,
                    120, 120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50, 120,
                    120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50, 120, 120, 2,
                    2, 50, 50, 120, 120, 2, 2, 50, 50, 120, 120, 2, 2, 50,
                    50, 120, 120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50,
                    120, 120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50, 120,
                    120, 2, 2, 50, 50, 120, 120, 2, 2, 50, 50, 120, 120],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_n_estimators': masked_array(data=[50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100,
                    50, 100, 50, 100, 50, 100, 50, 100, 50, 100, 50, 100],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_random_state': masked_array(data=[66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                    66, 66, 66, 66, 66, 66, 66, 66, 66, 66],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False],
        fill_value='?',
             dtype=object),
 'params': [{'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.05,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.1,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 10,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 1,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 5,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 2,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 50,
   'n_estimators': 100,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 50,
   'random_state': 66},
  {'criterion': 'friedman_mse',
   'learning_rate': 0.5,
   'max_depth': 22,
   'min_samples_leaf': 20,
   'min_samples_split': 120,
   'n_estimators': 100,
   'random_state': 66}],
 'split0_test_score': array([-0.27852932, -0.28472061, -0.26334865, -0.26654856, -0.26576841,
        -0.27141024, -0.28069725, -0.28157751, -0.26327313, -0.2664162 ,
        -0.26221436, -0.26434867, -0.26225423, -0.26865856, -0.26170962,
        -0.26457665, -0.26523206, -0.27248315, -0.32424361, -0.33358356,
        -0.27094784, -0.28120639, -0.26738922, -0.27443531, -0.28081522,
        -0.28165978, -0.26610198, -0.27058937, -0.26190611, -0.26582827,
        -0.26220254, -0.27195892, -0.2610268 , -0.26618452, -0.26605991,
        -0.27568759, -0.2863248 , -0.28711637, -0.26928178, -0.27489168,
        -0.27922629, -0.28394677, -0.28454724, -0.28654907, -0.26722129,
        -0.27036997, -0.26435361, -0.26545972, -0.26528967, -0.2695483 ,
        -0.2674203 , -0.26869093, -0.26926663, -0.27387912, -0.32849237,
        -0.32913309, -0.28377609, -0.28964757, -0.27724142, -0.28810688,
        -0.27999378, -0.2826528 , -0.26918643, -0.27339275, -0.27434006,
        -0.28240399, -0.26783974, -0.27035304, -0.26389687, -0.27001683,
        -0.27545422, -0.27968292, -0.29799483, -0.29799652, -0.30298947,
        -0.30447941, -0.30865781, -0.31899089, -0.30481918, -0.30700176,
        -0.31459192, -0.32596281, -0.28600268, -0.29614372, -0.29570973,
        -0.30145705, -0.28855627, -0.29462394, -0.29435066, -0.29858194,
        -0.33220982, -0.33220982, -0.31468721, -0.31512334, -0.29757479,
        -0.29933254, -0.3127216 , -0.31435334, -0.30041236, -0.3012461 ,
        -0.29889684, -0.30014756, -0.30380634, -0.30657584, -0.29319495,
        -0.29612882, -0.29938265, -0.29989308]),
 'split1_test_score': array([-0.3153678 , -0.32255451, -0.28871524, -0.286155  , -0.29220923,
        -0.29440475, -0.30523475, -0.3064416 , -0.29082183, -0.29244252,
        -0.28802244, -0.28769509, -0.29375228, -0.29531367, -0.29453078,
        -0.29353336, -0.28761341, -0.28964037, -0.36109984, -0.36992803,
        -0.30050528, -0.30753063, -0.29319767, -0.29608971, -0.31055482,
        -0.31335817, -0.29510896, -0.29803734, -0.29100527, -0.29664352,
        -0.29478023, -0.29645699, -0.29324888, -0.29322771, -0.2872135 ,
        -0.28824745, -0.32510518, -0.32601619, -0.29855312, -0.30269134,
        -0.29619392, -0.29813938, -0.30964284, -0.31728657, -0.29534635,
        -0.30125474, -0.29210554, -0.29342985, -0.29193817, -0.30070419,
        -0.29772329, -0.30440366, -0.28790916, -0.29502615, -0.37076186,
        -0.37155574, -0.29935839, -0.30092668, -0.29372993, -0.29879088,
        -0.31040555, -0.31399818, -0.30087881, -0.30877554, -0.29975641,
        -0.30815139, -0.2948979 , -0.30283282, -0.29551804, -0.30395504,
        -0.28708871, -0.29123478, -0.34411155, -0.34411097, -0.32933696,
        -0.33112928, -0.32109491, -0.33111412, -0.34582793, -0.34733288,
        -0.33393786, -0.34301521, -0.33912257, -0.34815133, -0.33466541,
        -0.33917541, -0.34124601, -0.34386315, -0.32238926, -0.33024994,
        -0.37064833, -0.37064833, -0.33907922, -0.33978933, -0.33643782,
        -0.3397805 , -0.34344345, -0.3444951 , -0.3173768 , -0.32069052,
        -0.33434613, -0.34048997, -0.33193316, -0.33375714, -0.35171162,
        -0.35393121, -0.31584985, -0.32316959]),
 'split2_test_score': array([-0.29122169, -0.29087138, -0.28502421, -0.28624451, -0.28227207,
        -0.28226721, -0.28701533, -0.28477843, -0.27316244, -0.27219639,
        -0.2811667 , -0.28009407, -0.27132278, -0.27066521, -0.26902849,
        -0.26827988, -0.2747413 , -0.27300219, -0.34426568, -0.35224657,
        -0.28566398, -0.28565953, -0.28212082, -0.28556676, -0.28665828,
        -0.28892413, -0.27610289, -0.27927235, -0.28187794, -0.28296172,
        -0.27192385, -0.27429371, -0.26896248, -0.26793885, -0.27302708,
        -0.26774415, -0.29420152, -0.29522478, -0.27949391, -0.28170587,
        -0.28902208, -0.2918033 , -0.2891693 , -0.292028  , -0.27866076,
        -0.28238551, -0.27796667, -0.28525599, -0.27144502, -0.27738978,
        -0.27327763, -0.27389463, -0.2718271 , -0.27393798, -0.35669821,
        -0.35733456, -0.29009358, -0.29524152, -0.28320595, -0.290696  ,
        -0.29006027, -0.29006575, -0.27632146, -0.28216694, -0.28712092,
        -0.29374492, -0.27297155, -0.28697839, -0.27369305, -0.28568149,
        -0.26820977, -0.28144712, -0.31534608, -0.31534715, -0.32553033,
        -0.32721685, -0.316442  , -0.32098605, -0.32188504, -0.32498635,
        -0.30347496, -0.31177521, -0.30384994, -0.30317321, -0.30716084,
        -0.31126295, -0.28191625, -0.28804691, -0.29451874, -0.29997856,
        -0.36695025, -0.36695025, -0.31540395, -0.31539754, -0.31200958,
        -0.31216695, -0.32415513, -0.32708235, -0.32025463, -0.321334  ,
        -0.32335997, -0.32243249, -0.28292268, -0.28622885, -0.29042449,
        -0.29184099, -0.29995464, -0.30330231]),
 'split3_test_score': array([-0.29517704, -0.30218808, -0.27518821, -0.27820929, -0.26727994,
        -0.27126335, -0.27695511, -0.27804546, -0.2693881 , -0.27796655,
        -0.26368504, -0.27292047, -0.27176887, -0.27549146, -0.26869997,
        -0.27308295, -0.26155631, -0.26188844, -0.35602113, -0.36909163,
        -0.2769656 , -0.28325195, -0.26220942, -0.27411446, -0.27966691,
        -0.28456306, -0.27056287, -0.2845893 , -0.2658422 , -0.27544823,
        -0.27101309, -0.27475361, -0.26939338, -0.27470461, -0.2617053 ,
        -0.2657306 , -0.30411168, -0.30608009, -0.27523322, -0.28110384,
        -0.27180058, -0.27385074, -0.2839926 , -0.28478893, -0.27599234,
        -0.28187185, -0.27122678, -0.27744411, -0.27926904, -0.28165499,
        -0.27185595, -0.27605231, -0.26549577, -0.2707391 , -0.37730255,
        -0.37826489, -0.28589288, -0.29127701, -0.27316856, -0.27863974,
        -0.28556404, -0.28624316, -0.27585293, -0.27984965, -0.27323478,
        -0.28304803, -0.28095373, -0.28899674, -0.27513887, -0.28280493,
        -0.26660432, -0.27351424, -0.33675191, -0.33675646, -0.32517968,
        -0.3253704 , -0.28415454, -0.28932007, -0.3009054 , -0.30154545,
        -0.31135229, -0.31437808, -0.30773985, -0.31943452, -0.30432154,
        -0.31104212, -0.30519357, -0.31003485, -0.29092995, -0.29651292,
        -0.38236684, -0.38236684, -0.3182926 , -0.31849983, -0.30407941,
        -0.30596075, -0.31020621, -0.31043212, -0.31702198, -0.3197942 ,
        -0.3077334 , -0.31332873, -0.30327636, -0.30453913, -0.30240027,
        -0.3064479 , -0.29081884, -0.29513333]),
 'split4_test_score': array([-0.3090799 , -0.31434025, -0.29111308, -0.2895865 , -0.28206386,
        -0.28424778, -0.28762196, -0.28347101, -0.2856147 , -0.28199813,
        -0.28180027, -0.2779923 , -0.27109099, -0.2687674 , -0.27262242,
        -0.26962858, -0.27569938, -0.26898226, -0.36125963, -0.36811285,
        -0.29127745, -0.29121913, -0.28476456, -0.28434464, -0.29230392,
        -0.29276073, -0.28641064, -0.28203636, -0.27940842, -0.27581337,
        -0.27294993, -0.26991418, -0.27294461, -0.26848747, -0.27628817,
        -0.27083077, -0.30916599, -0.31110027, -0.28983267, -0.28955897,
        -0.28506453, -0.28626079, -0.29030361, -0.29246643, -0.28120746,
        -0.28166629, -0.27504217, -0.27602169, -0.27347551, -0.2773087 ,
        -0.27104195, -0.27561052, -0.26685011, -0.27196756, -0.36845873,
        -0.36905715, -0.29214009, -0.29596504, -0.26888923, -0.27248038,
        -0.29197411, -0.2935472 , -0.28286113, -0.28723137, -0.27660442,
        -0.28185949, -0.27931361, -0.28506728, -0.26823172, -0.27927611,
        -0.26702563, -0.27527921, -0.32683587, -0.32683634, -0.30949218,
        -0.3119441 , -0.31653676, -0.32406181, -0.3075496 , -0.30709413,
        -0.30339348, -0.3079155 , -0.29098047, -0.29430409, -0.31140445,
        -0.31890688, -0.29850572, -0.30091265, -0.30504221, -0.30858517,
        -0.37142186, -0.37142186, -0.33224721, -0.33240606, -0.32035474,
        -0.32362696, -0.30626116, -0.30432128, -0.30580431, -0.30633057,
        -0.30519605, -0.31066451, -0.31041696, -0.31146801, -0.30650394,
        -0.30932997, -0.3045324 , -0.31050812]),
 'mean_test_score': array([-0.29787515, -0.30293497, -0.28067788, -0.28134877, -0.2779187 ,
        -0.28071867, -0.28750488, -0.2868628 , -0.27645204, -0.27820396,
        -0.27537776, -0.27661012, -0.27403783, -0.27577926, -0.27331826,
        -0.27382028, -0.27296849, -0.27319928, -0.34937798, -0.35859253,
        -0.28507203, -0.28977353, -0.27793634, -0.28291018, -0.28999983,
        -0.29225317, -0.27885747, -0.28290494, -0.27600799, -0.27933902,
        -0.27457393, -0.27747548, -0.27311523, -0.27410863, -0.27285879,
        -0.27364811, -0.30378183, -0.30510754, -0.28247894, -0.28599034,
        -0.28426148, -0.28680019, -0.29153112, -0.2946238 , -0.27968564,
        -0.28350967, -0.27613895, -0.27952227, -0.27628348, -0.28132119,
        -0.27626382, -0.27973041, -0.27226975, -0.27710998, -0.36034274,
        -0.36106908, -0.2902522 , -0.29461157, -0.27924702, -0.28574278,
        -0.29159955, -0.29330142, -0.28102015, -0.28628325, -0.28221132,
        -0.28984156, -0.2791953 , -0.28684565, -0.27529571, -0.28434688,
        -0.27287653, -0.28023165, -0.32420805, -0.32420949, -0.31850572,
        -0.32002801, -0.3093772 , -0.31689459, -0.31619743, -0.31759211,
        -0.3133501 , -0.32060936, -0.3055391 , -0.31224137, -0.31065239,
        -0.31636888, -0.30308356, -0.3074963 , -0.30144616, -0.30678171,
        -0.36471942, -0.36471942, -0.32394204, -0.32424322, -0.31409127,
        -0.31617354, -0.31935751, -0.32013684, -0.31217401, -0.31387908,
        -0.31390648, -0.31741265, -0.3064711 , -0.30851379, -0.30884705,
        -0.31153578, -0.30210767, -0.30640129]),
 'std_test_score': array([0.01309464, 0.01409154, 0.01022567, 0.00829254, 0.01001166,
        0.00869726, 0.00971847, 0.01004846, 0.01024548, 0.00885698,
        0.01043689, 0.00775734, 0.01047584, 0.01007671, 0.01117986,
        0.01022605, 0.00911224, 0.00912776, 0.01400413, 0.01410731,
        0.01041393, 0.00948953, 0.01145094, 0.00814866, 0.01122594,
        0.0112082 , 0.01058538, 0.00891572, 0.01070648, 0.01022427,
        0.0108045 , 0.00964817, 0.01079463, 0.00998348, 0.00881444,
        0.00803469, 0.01326886, 0.01338194, 0.01046931, 0.0095611 ,
        0.00832248, 0.00812071, 0.00938854, 0.01172109, 0.0091392 ,
        0.0099487 , 0.00919238, 0.00938749, 0.00901268, 0.01044958,
        0.01090258, 0.01261109, 0.00811253, 0.00903904, 0.01726147,
        0.01733972, 0.00543057, 0.00394639, 0.00864502, 0.00923819,
        0.01026934, 0.01097359, 0.01083116, 0.01209382, 0.01005889,
        0.01015548, 0.00913632, 0.01034798, 0.01087538, 0.01113285,
        0.00779722, 0.0062048 , 0.0162854 , 0.01628531, 0.01032667,
        0.01010512, 0.01323008, 0.01438786, 0.016422  , 0.01684664,
        0.01118965, 0.0127176 , 0.01859662, 0.02002188, 0.01305944,
        0.01267586, 0.02069241, 0.01957709, 0.01149322, 0.01243364,
        0.01704909, 0.01704909, 0.00988511, 0.01002715, 0.01353488,
        0.01426054, 0.01343462, 0.01427815, 0.00767825, 0.00840872,
        0.01301088, 0.01355036, 0.01572083, 0.0152455 , 0.02222072,
        0.02215122, 0.00817589, 0.00976698]),
 'rank_test_score': array([ 65,  68,  35,  39,  24,  36,  54,  53,  20,  26,  14,  21,  10,
         15,   7,   9,   4,   6, 103, 104,  47,  55,  25,  43,  57,  61,
         27,  42,  16,  30,  12,  23,   5,  11,   2,   8,  70,  71,  41,
         49,  45,  51,  59,  64,  32,  44,  17,  31,  19,  38,  18,  33,
          1,  22, 105, 106,  58,  63,  29,  48,  60,  62,  37,  50,  40,
         56,  28,  52,  13,  46,   3,  34, 100, 101,  94,  96,  79,  91,
         89,  93,  84,  98,  72,  83,  80,  90,  69,  76,  66,  75, 107,
        107,  99, 102,  87,  88,  95,  97,  82,  85,  86,  92,  74,  77,
         78,  81,  67,  73])}