{'mean_fit_time': array([0.00479679, 0.0049964 , 0.00459709, 0.00399761, 0.00419736,
        0.00399737, 0.00359855, 0.00419693, 0.00399685, 0.00399671,
        0.00399723, 0.00379748, 0.00379705, 0.0035974 , 0.00339775,
        0.0039968 , 0.00279856, 0.00339789, 0.00319796, 0.00299783,
        0.0031981 , 0.003198  , 0.0031971 , 0.00319829, 0.00339813,
        0.00319667, 0.00339818, 0.00339794, 0.00339851, 0.00339932,
        0.00299845, 0.00319872]),
 'std_fit_time': array([7.48405504e-04, 1.09462594e-03, 4.89414904e-04, 5.09122765e-07,
        3.99828256e-04, 7.74768677e-07, 4.89960392e-04, 3.98734425e-04,
        4.26496120e-07, 4.15696997e-07, 2.86102295e-07, 3.99685162e-04,
        3.99351533e-04, 4.89512062e-04, 4.89453714e-04, 5.51978917e-07,
        3.99828028e-04, 4.89628956e-04, 3.99923481e-04, 3.81469727e-07,
        3.99732632e-04, 3.99661103e-04, 4.00352961e-04, 3.99637805e-04,
        4.89336913e-04, 4.00454744e-04, 4.89492864e-04, 4.89492725e-04,
        4.89222762e-04, 4.89249178e-04, 1.00701867e-06, 3.98958785e-04]),
 'mean_score_time': array([0.00439777, 0.00459728, 0.00319796, 0.00379767, 0.00319786,
        0.00359817, 0.00359712, 0.00379777, 0.00339847, 0.00359836,
        0.00359802, 0.00379796, 0.00359788, 0.00399776, 0.00439696,
        0.00439963, 0.00499644, 0.00519695, 0.00499649, 0.00519657,
        0.00559616, 0.00579696, 0.00539656, 0.00579629, 0.00559645,
        0.00579801, 0.00599594, 0.00599642, 0.00639567, 0.00699453,
        0.00699577, 0.00699487]),
 'std_score_time': array([7.99704231e-04, 4.89280366e-04, 3.99446729e-04, 3.99662981e-04,
        3.99494285e-04, 4.88967116e-04, 4.89474716e-04, 7.48264911e-04,
        4.89843081e-04, 4.89706714e-04, 4.89628956e-04, 3.99446729e-04,
        4.89706761e-04, 4.62310777e-07, 4.89648413e-04, 4.87871450e-04,
        6.32409775e-04, 3.99995060e-04, 6.32108391e-04, 3.99471364e-04,
        4.89687315e-04, 7.47576644e-04, 4.89922611e-04, 1.16501020e-03,
        4.89434249e-04, 4.00263785e-04, 4.10190833e-07, 6.32183637e-04,
        4.89999813e-04, 6.32262093e-04, 1.60716052e-06, 3.29190361e-06]),
 'param_algorithm': masked_array(data=['kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                    'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                    'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree', 'kd_tree',
                    'kd_tree', 'ball_tree', 'ball_tree', 'ball_tree',
                    'ball_tree', 'ball_tree', 'ball_tree', 'ball_tree',
                    'ball_tree', 'ball_tree', 'ball_tree', 'ball_tree',
                    'ball_tree', 'ball_tree', 'ball_tree', 'ball_tree',
                    'ball_tree'],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_n_neighbors': masked_array(data=[3, 3, 5, 5, 9, 9, 10, 10, 15, 15, 20, 20, 30, 30, 50,
                    50, 3, 3, 5, 5, 9, 9, 10, 10, 15, 15, 20, 20, 30, 30,
                    50, 50],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False],
        fill_value='?',
             dtype=object),
 'param_weights': masked_array(data=['uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance',
                    'uniform', 'distance', 'uniform', 'distance'],
              mask=[False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False,
                    False, False, False, False, False, False, False, False],
        fill_value='?',
             dtype=object),
 'params': [{'algorithm': 'kd_tree', 'n_neighbors': 3, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 3, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 5, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 5, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 9, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 9, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 10, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 10, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 15, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 15, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 20, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 20, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 30, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 30, 'weights': 'distance'},
  {'algorithm': 'kd_tree', 'n_neighbors': 50, 'weights': 'uniform'},
  {'algorithm': 'kd_tree', 'n_neighbors': 50, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 3, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 3, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 5, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 5, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 9, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 9, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 10, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 10, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 15, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 15, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 20, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 20, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 30, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 30, 'weights': 'distance'},
  {'algorithm': 'ball_tree', 'n_neighbors': 50, 'weights': 'uniform'},
  {'algorithm': 'ball_tree', 'n_neighbors': 50, 'weights': 'distance'}],
 'split0_test_score': array([-0.38233333, -0.38759958, -0.3759    , -0.37312121, -0.37066667,
        -0.36841832, -0.36705   , -0.36435801, -0.36806667, -0.35962606,
        -0.3755    , -0.36366769, -0.37251667, -0.36374508, -0.37023   ,
        -0.36563207, -0.38233333, -0.38759958, -0.3759    , -0.37312121,
        -0.37066667, -0.36841832, -0.36705   , -0.36435801, -0.36806667,
        -0.35962606, -0.3755    , -0.36366769, -0.37251667, -0.36374508,
        -0.37023   , -0.36563207]),
 'split1_test_score': array([-0.43048576, -0.43124083, -0.41668342, -0.41620794, -0.40614182,
        -0.4040103 , -0.40095477, -0.40058251, -0.3961474 , -0.39731224,
        -0.38962312, -0.39355153, -0.38994975, -0.39099794, -0.39222111,
        -0.39195084, -0.43048576, -0.43124083, -0.41668342, -0.41620794,
        -0.40614182, -0.4040103 , -0.40095477, -0.40058251, -0.3961474 ,
        -0.39731224, -0.38962312, -0.39355153, -0.38994975, -0.39099794,
        -0.39222111, -0.39195084]),
 'split2_test_score': array([-0.42043551, -0.4160036 , -0.40251256, -0.39560179, -0.39140145,
        -0.38875182, -0.39246231, -0.38957641, -0.39393635, -0.38983852,
        -0.39914573, -0.39374905, -0.39969849, -0.39418611, -0.40227136,
        -0.39621969, -0.42043551, -0.4160036 , -0.40251256, -0.39560179,
        -0.39140145, -0.38875182, -0.39246231, -0.38957641, -0.39393635,
        -0.38983852, -0.39914573, -0.39374905, -0.39969849, -0.39418611,
        -0.40227136, -0.39621969]),
 'split3_test_score': array([-0.40351759, -0.39958285, -0.37708543, -0.37799006, -0.37286432,
        -0.3697827 , -0.37005025, -0.36806088, -0.3718928 , -0.36552929,
        -0.3739196 , -0.36365464, -0.37494137, -0.36466797, -0.37972864,
        -0.3700629 , -0.40351759, -0.39958285, -0.37708543, -0.37799006,
        -0.37286432, -0.3697827 , -0.37005025, -0.36806088, -0.3718928 ,
        -0.36552929, -0.3739196 , -0.36365464, -0.37494137, -0.36466797,
        -0.37972864, -0.3700629 ]),
 'split4_test_score': array([-0.40954774, -0.40567218, -0.41175879, -0.40792999, -0.41111111,
        -0.40331268, -0.40954774, -0.40387602, -0.40897822, -0.40159409,
        -0.4140201 , -0.40482299, -0.41690117, -0.40849355, -0.42063317,
        -0.41319567, -0.40954774, -0.40567218, -0.41175879, -0.40792999,
        -0.41111111, -0.40331268, -0.40954774, -0.40387602, -0.40897822,
        -0.40159409, -0.4140201 , -0.40482299, -0.41690117, -0.40849355,
        -0.42063317, -0.41319567]),
 'mean_test_score': array([-0.40926399, -0.40801981, -0.39678804, -0.3941702 , -0.39043707,
        -0.38685517, -0.38801302, -0.38529077, -0.38780429, -0.38278004,
        -0.39044171, -0.38388918, -0.39080149, -0.38441813, -0.39301685,
        -0.38741223, -0.40926399, -0.40801981, -0.39678804, -0.3941702 ,
        -0.39043707, -0.38685517, -0.38801302, -0.38529077, -0.38780429,
        -0.38278004, -0.39044171, -0.38388918, -0.39080149, -0.38441813,
        -0.39301685, -0.38741223]),
 'std_test_score': array([0.01633113, 0.0148097 , 0.0171885 , 0.01662468, 0.01658105,
        0.01549279, 0.01681154, 0.01632584, 0.01548092, 0.01702158,
        0.01502402, 0.01701263, 0.01641313, 0.01752585, 0.01757701,
        0.01754041, 0.01633113, 0.0148097 , 0.0171885 , 0.01662468,
        0.01658105, 0.01549279, 0.01681154, 0.01632584, 0.01548092,
        0.01702158, 0.01502402, 0.01701263, 0.01641313, 0.01752585,
        0.01757701, 0.01754041]),
 'rank_test_score': array([31, 29, 27, 25, 17,  9, 15,  7, 13,  1, 19,  3, 21,  5, 23, 11, 31,
        29, 27, 25, 17,  9, 15,  7, 13,  1, 19,  3, 21,  5, 23, 11])}